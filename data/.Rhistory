install.packages("tidyverse")
library(dplyr)
?filter
rownames(permits)
row.names(permits)
permits <- read.csv("Desktop/r/cuny-craft/data/New_Building_Permits.csv")
blocks <- read.csv("Desktop/r/cuny-craft/data/nycmaps_blocks.csv")
nrow(permits) #66006
nrow(blocks) #87
row.names(permits)
colnames(permits)
permits <- read.csv("Desktop/r/cuny-craft/data/New_Building_Permits.csv")
blocks <- read.csv("Desktop/r/cuny-craft/data/nycmaps_blocks.csv")
head(blocks)
head(permits)
permits_by_block <- permits %>%
filter(Block %in% blocks$Block)
View(permits_by_block)
colnames(permits)
permits_by_block <- permits_by_block %>%
select(BOROUGH:Residential,
Permit.Status:Permit.Type,
Filing.Date:Permittee.s.License.Type,
Owner.s.Business.Type:Owner.s.House.City)
permits_by_block <- permits %>%
filter(Block %in% blocks$Block) %>%
select(BOROUGH:Residential,
Permit.Status:Permit.Type,
Filing.Date:Permittee.s.License.Type,
Owner.s.Business.Type:Owner.s.House.City)
write.csv(permits_by_block, "Desktop/r/cuny-craft/output/Permits-by-block.csv")
library(ggplot2)
library(rgdal)
install.packages("rgdal")
library(rgdal)
cd.shp <- readOGR(dsn = file.path(tempdir(), "geo_export_b2c15e68-2cad-4e47-a984-428f27309732.shp"),
stringsAsFactors = F)
cd.shp <- readOGR(dsn = file.path(tempdir(), "~/Desktop/r/nyc_cd/data/Community Districts/geo_export_b2c15e68-2cad-4e47-a984-428f27309732.shp"),
stringsAsFactors = F)
cd.shp <- readOGR(dsn = file.path(tempdir(), "/Desktop/r/nyc_cd/data/Community Districts/geo_export_b2c15e68-2cad-4e47-a984-428f27309732.shp"),
stringsAsFactors = F)
cd.shp <- readOGR(dsn = "~/Desktop/r/nyc_cd/data/Community Districts/geo_export_b2c15e68-2cad-4e47-a984-428f27309732.shp",
stringsAsFactors = F)
summary(cd.shp)
cd.shp$shape_area
cd.shp$shape_leng
cd.shp$boro_cd
cd.shp@polygons
head(cd.shp@data)
head(cd.shp@bbox)
map <- ggplot() + geom_polygon(data = cd.shp, aes(x = long, y = lat, group = group), colour = "black", fill = NA)
summary(cd.shp@data)
summary(cd.shp@polygons)
summary(cd.shp@data)
summary(cd.shp@bbox)
summary(cd.shp@plotOrder)
summary(cd.shp@proj4string)
cd.shp@data %>% head()
library(tidyverse)
cd.shp@data %>% head()
knitr::opts_chunk$set(echo = TRUE)
mta_stations <- mta_perday$STATION %>% unique %>% tibble(station_names=.)
mta_stations <- mta_perday$STATION %>% unique %>% data_frame(station_names=.)
geo_station <- geo_income$station_name %>% unique %>% data_frame(station_names=.)
# Call the necessary lirbaries
# Primarily using dplyr and rest of tidyverse
library(tidyverse)
library(readxl)
## IMPORT AND CLEAN THE DATA
setwd("~/interactives/mta_turnstile")
list.files()
mta <- read_excel("/Users/eliasguerra/interactives/mta_turnstile/data/turnstile-200222-200327.xlsx") # read_excel from readr
str(mta)
# mta_14st <- filter(mta, STATION == "14 ST-UNION SQ")
# write_csv(mta_14st, "/Users/eliasguerra/interactives/mta-turnstile/data/mta_example14st.csv")
# clean up the date and time
mta_date <- as.character.Date(mta$DATE) %>% str_sub(1,10)
mta_time <- as.character(mta$TIME) %>% str_sub(12,21)
mta_dt <- paste(mta_date,"T",mta_time, sep = "") %>% lubridate::ymd_hms()
# (show what they look like here)
# idk why i make this another step i just like it this way
mta$date_time <- mta_dt
mta$just_date <- mta_date
mta$just_time <- mta_time
# new look, same great taste
mta$date_time[2]
# Create new column "new.entries" and "new.exits"
# calculated from cumulative "ENTRIES"/"EXITS" for each station
new_entries <- vector(length = nrow(mta))
new_exits <- vector(length = nrow(mta))
new_scp <- vector(length = nrow(mta)) # new_scp indicates device ID (dif turnstile?)
for (i in 1:nrow(mta)) {
new_entries[i] <- mta$ENTRIES[i+1] - mta$ENTRIES[i]
new_exits[i] <- mta$EXITS[i+1] - mta$EXITS[i]
new_scp[i] <- mta$SCP[i+1] != mta$SCP[i]
}
mta$new_entries <- new_entries # Not the same as "ENTRIES"
mta$new_exits <- new_exits
new_scp[1] <- TRUE
mta$new_scp <- new_scp
# Notice that the negative new entries/exits match new_scp (and I fixed one in line 43)
mta_cleanr <- mta %>%
filter(new_scp == F) %>%
select(date_time,STATION, LINENAME, SCP, ENTRIES, new_entries, new_exits, just_date, just_time)
head(mta_cleanr, 10)
#This will take the total rides per day and the average rides every four hours.
mta_perday <-
mta_cleanr %>%
group_by(STATION, just_date) %>%
summarise(avg_entries = mean(new_entries), # avg is four each unit of time data was collected, four hours
total_entries = sum(new_entries),
avg_exits = mean(new_exits),
total_exits = sum(new_exits)) %>%
filter(just_date != "1899-12-31") # This date gets included for some reason
head(mta_perday, 10)
# We have a our data in a form we can use now.
head(mta_cleanr)
# Time to graph to it.
mta_perday %>% filter(STATION == "14 ST-UNION SQ") %>%
mutate(month_day = str_sub(just_date, 6,10)) %>%
ggplot(aes(x = month_day, y = total_entries)) +
geom_bar(stat = "identity") +
ylab("Daily turnstiles entries") + xlab("Date") +
ggtitle("Total daily turnstile entries at 14-Street Union Sq.") +
coord_flip()
# MTA geocoded data from Christopher Whong
# https://github.com/chriswhong/nycturnstiles/blob/master/geocoded.csv
data_files <- list.files("~/interactives/mta_turnstile/data")
setwd("~/interactives/mta_turnstile/data")
geo_income <- read_csv(data_files[1])
View(head(geo_income))
View(head(mta_perday))
select(geo_income, -the_geom)
mta_stations <- mta_perday$STATION %>% unique %>% data_frame(station_names=.)
geo_station <- geo_income$station_name %>% unique %>% data_frame(station_names=.)
both_station_names <- c(mta_stations$station_names, geo_station$station_names) %>% sort()
both_station_names
# Let's look at stations that include "42"
both_station_names[str_which(both_station_names, "42")] %>% sort
# Average traffic at station per day
# Compare cumulative hourly over a few days
# Let's look at stations that include "42"
both_station_names[str_which(both_station_names, "42")] %>% sort
# We have a our data in a form we can use now.
head(mta_cleanr)
mta_cleanr
write_csv("~/interactives/mta_turnstile/data/export/mta_clean.csv")
write_csv(mta_cleanr, "~/interactives/mta_turnstile/data/export/mta_clean.csv")
list.files("~/interactives/mta_turnstile/data")
setwd("~/interactives/mta_turnstile/data")
geo_income <- read_csv(data_files[1])
geo_income <- read_csv(~/"interactives/mta_turnstile/data/2018-med-income-ACS_by_subway-station - 2018-med-income-ACS_by_subway-station.csv")
geo_income <- read_csv("~/interactives/mta_turnstile/data/2018-med-income-ACS_by_subway-station - 2018-med-income-ACS_by_subway-station.csv")
